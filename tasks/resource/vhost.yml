---

# Do not forget to notify 'Restart nginx'

- set_fact:
      _vhost_dir: "{{ nginx_conf_dir }}/sites-available"
      _vhost_enable_dir: "{{ nginx_conf_dir }}/sites-enabled"
      _vhost_fragments_dir: "{{ nginx_conf_fragments_dir }}/conf.sites.d"

- name: Clean up nginx vhost config fragments directory
  file: path={{ _vhost_fragments_dir }} state=absent

- name: Validate IPv6 kernel support exists if ipv6_enabled is true
  fail: msg="[nginx] IPv6 support is not enabled or configured properly"
  when: item.ipv6_enable|default(false) and not ansible_default_ipv6.address 
  with_items: nginx_vhost

- name: Validate SSL certificate/key is defined
  fail: msg="[nginx] SSL certificate/key (ssl_cert/ssl_key) and/or SSL Private must be defined on the target system(s)"
  when: item.ssl|default(false) and (item.ssl_cert is not defined or item.ssl_key is not defined)
  with_items: nginx_vhost

- name: Validate vhost name
  fail: msg="Cannot have whitespace or '/' in vhost name"
  when: item.vhost|search(' |/|_')
  with_items: nginx_location

#- name: Create nginx vhost config fragments dir
#  file: path={{ _vhost_fragments_dir }} state=directory

- name: Create nginx vhost config fragments sub directories
  file: path={{ _vhost_fragments_dir }}/{{ item.vhost }} state=directory
  with_items: nginx_vhost

# Create nginx location config fragments
- include: location.yml
  when: config_nginx_location

- name: Create nginx non-ssl vhost header config fragment 
  template: src=../../templates/vhost/vhost_header.j2 dest={{ _vhost_fragments_dir }}/{{ item.vhost }}/001-nonssl-header.vhost owner=root group=root mode=0644
  when: not item.ssl|default(false) and item.listen_port != item.ssl_port|default(false)
  with_items: nginx_vhost

- name: Create nginx non-ssl vhost footer config fragment 
  template: src=../../templates/vhost/vhost_footer.j2 dest={{ _vhost_fragments_dir }}/{{ item.vhost }}/699-nonssl-footer.vhost owner=root group=root mode=0644
  when: not item.ssl|default(false) and item.listen_port != item.ssl_port|default(false)
  with_items: nginx_vhost

- debug: msg="CHECKPOINT"

- name: Create nginx ssl vhost header config fragment 
  template: src=../../templates/vhost/vhost_ssl_header.j2 dest={{ _vhost_fragments_dir }}/{{ item.vhost }}/700-ssl-header.vhost owner=root group=root mode=0644
  when: item.ssl|default(false)
  with_items: nginx_vhost

- name: Create nginx ssl vhost footer config fragment 
  template: src=../../templates/vhost/vhost_ssl_footer.j2 dest={{ _vhost_fragments_dir }}/{{ item.vhost }}/999-ssl-footer.vhost owner=root group=root mode=0644
  when: item.ssl|default(false)
  with_items: nginx_vhost

### ToDo: How to assemble config for ssl vhost

#- name: Create nginx vhost config 
#  template: src=../../templates/vhost/vhost.j2 dest={{ _vhost_fragments_dir }}/{{ item.vhost }}/999002-vhost owner=root group=root mode=0644
#  with_items: nginx_vhost

- name: Assemble nginx vhost config
  assemble: src={{ _vhost_fragments_dir }}/{{ item.vhost }} dest={{ _vhost_dir }}/{{ item.vhost }}.conf
  with_items: nginx_vhost

- name: Enable nginx vhost config
  file: src={{ _vhost_dir }}/{{ item.vhost }}.conf dest={{ _vhost_enable_dir }}/{{ item.vhost }}.conf owner=root group=root state=link
  when: item.enable|default(true)
  with_items: nginx_vhost
  notify: Restart nginx

# Might want to consider a task for use_default_location
### POST vhost.yml

- include: map.yml
  when: config_nginx_map

- include: geo.yml
  when: config_nginx_geo
