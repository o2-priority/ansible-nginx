{# *** [START] set _listen_options *** #}
{% if item.listen_options|default(false) %}
{% set _listen_options = ' ' + item.listen_options %}
{% else %}
{% set _listen_options = '' %}
{% endif %}
{% if item.ipv6_listen_options|default(false) %}
{% set _ipv6_listen_options = ' ' + item.ipv6_listen_options %}
{% else %}
{% set _ipv6_listen_options = '' %}
{% endif %}
{# *** [END] set _listen_options *** #}

{% if item.rewrite_www_to_non_www|default(false) %}
server {
{# Note: the value of item.listen_ip should be a list or a string #}
{% if item.listen_ip|default('*') is not string and item.listen_ip is iterable -%}
{% for ip in item.listen_ip %}
  listen {{ ip }}:{{ item.listen_port }}{{ _listen_options }};
{% endfor %}
{% else %}
  listen {{ item.listen_ip|default('*') }}:{{ item.listen_port }}{{ _listen_options }};
{% endif %}
{# check to see if ipv6 support exists in the kernel before applying #}
{% if item.ipv6_enable|default(false) and (ansible_default_ipv6.address is defined) -%}
{# Note: the value of item.ipv6_listen_ip should be a list or a string #}
{% if item.ipv6_listen_ip|default('::') is not string and item.ipv6_listen_ip is iterable -%}
{% for ipv6 in item.ipv6_listen_ip %}
  listen [{{ ipv6 }}]:{{ item.ipv6_listen_port }}{{ _ipv6_listen_options }};
{% endfor %}
{% else %}
  listen [{{ item.ipv6_listen_ip|default('::') }}]:{{ item.ipv6_listen_port }}{{ _ipv6_listen_options }};
{% endif %}
{% endif %}
  server_name  www.{{ item.server_name[0]|regex_replace('^www.', '') }};
  return       301 http://{{ item.server_name[0]|regex_replace('^www.', '') }}$request_uri;
}

{% endif %}

server {
{# Note: the value of item.listen_ip should be a list or a string #}
{% if item.listen_ip|default('*') is not string and item.listen_ip is iterable -%}
{% for ip in item.listen_ip %}
  listen {{ ip }}:{{ item.listen_port }}{{ _listen_options }};
{% endfor %}
{% else %}
  listen {{ item.listen_ip|default('*') }}:{{ item.listen_port }}{{ _listen_options }};
{% endif %}

{# check to see if ipv6 support exists in the kernel before applying #}
{% if item.ipv6_enable|default(false) and (ansible_default_ipv6.address is defined) -%}
{# Note: the value of item.ipv6_listen_ip should be a list or a string #}
{% if item.ipv6_listen_ip|default('::') is not string and item.ipv6_listen_ip is iterable -%}
{% for ipv6 in item.ipv6_listen_ip %}
  listen [{{ ipv6 }}]:{{ item.ipv6_listen_port }}{{ _ipv6_listen_options }};
{% endfor %}
{% else %}
  listen [{{ item.ipv6_listen_ip|default('::') }}]:{{ item.ipv6_listen_port }}{{ _ipv6_listen_options }};
{% endif %}
{% endif %}

{% if item.rewrite_www_to_non_www|default(false) %}
  server_name           {{ item.server_name[0]|regex_replace('^www.', '') }};
{% else %}
  server_name           {{ item.server_name|join(" ") }};
{% endif %}
{% if item.auth_basic|default(false) %}
  auth_basic           "{{ item.auth_basic }}";
{% endif %}
{% if item.auth_basic_user_file|default(false) %}
  auth_basic_user_file {{ item.auth_basic_user_file }};
{% endif %}

{% if item.client_body_timeout|default(false) %}
  client_body_timeout {{ item.client_body_timeout }};
{% endif %}
{% if item.client_header_timeout|default(false) %}
  client_header_timeout {{ item.client_header_timeout }};
{% endif %}
{% if item.client_max_body_size|default(false) %}
  client_max_body_size {{ item.client_max_body_size }};
{% endif %}

{% if item.gzip_types|default(false) %}
  gzip_types {{ item.gzip_types }};
{% endif %}

{# make sure that allow comes before deny by forcing the allow key (if it #}
{# exists) to be first in the output order.  The hash keys also need to be #}
{# sorted so that the ordering is stable. #}
{% if item.vhost_cfg_prepend|default(false) -%}
{% for key,value in item.vhost_cfg_prepend|dictsort %}
{# NOTE: value may only be a string or a list #}
{% if value is not string and value is iterable%}
{% for asubvalue in value %}
  {{ key }} {{ asubvalue }};
{% endfor %}
{% else %}
  {{ key }} {{ value }};
{% endif %}
{% endfor %}
{% endif -%}

{% if item.location_raw_prepend|default(false) and item.location_raw_prepend is iterable %}
{% for line in item.location_raw_prepend %}
  {{ line }}
{% endfor %}
{% endif %}

{% if item.www_root|default(false) %}
  root {{ item.www_root }};
{% endif %}
{% if item.passenger_cgi_param|default(false) %}
{% for key,value in item.passenger_cgi_param|dictsort %}
  passenger_set_cgi_param  {{ key }} {{ value }};
{% endfor %}
{% endif %}
{% if item.passenger_set_header|default(false) %}
{% for key,value in item.passenger_set_header|dictsort %}
  passenger_set_header  {{ key }} {{ value }};
{% endfor %}
{% endif -%}
{% if item.passenger_env_var|default(false) %}
{% for key,value in item.passenger_env_var|dictsort %}
  passenger_env_var  {{ key }} {{ value }};
{% endfor %}
{% endif %}
{% if item.resolver|default([])|count > 0 %}
  resolver                  {{ item.resolver|join(' ') }};
{% endif %}
{% if item.add_header|default(false) %}
{% for key,value in item.add_header|dictsort %}
  add_header              {{ key }} {{ value }};
{% endfor %}
{% endif %}
{% if item.maintenance|default(false) %}
  {{ item.maintenance_value }};
{% endif %}
{% if item.rewrite_to_https|default(false) %}
  if ($ssl_protocol = "") {
{% if item.ssl_port|default(false) != 443 %}
       return 301 https://$host:{{ item.ssl_port }}$request_uri;
{% else %}
       return 301 https://$host$request_uri;
{% endif %}
  }
{% endif %}
{% if item.index_files|default(false) %}
  index    {{ item.index_files|join(' ') }};
{% elif item.index_files is defined and item.index_files|count == 0 %}
{# index_files is empty so do nothing #}
{% else %}
  index    {{ nginx_index_files|join(' ') }};
{% endif %}
{% if item.log_by_lua|default(false) %}
  log_by_lua '{{ item.log_by_lua }}';
{% endif %}
{% if item.log_by_lua_file|default(false) %}
  log_by_lua_file "{{ item.log_by_lua_file }}";
{% endif %}

{# *** [START] set _access_log and _error_log *** #}
{% set _access_log = item.vhost + '.access.log' %}
{% set _ssl_access_log 	= 'ssl-' + item.vhost + '.access.log' %}
{% if item.access_log is defined and item.access_log %}
{% set _access_log 	= item.access_log %}
{% set _ssl_access_log 	= 'ssl-' + item.access_log %}
{% endif %}

{% set _error_log = item.vhost + '.error.log' %}
{% set _ssl_error_log 	= 'ssl-' + item.vhost + '.error.log' %}
{% if item.error_log is defined and item.error_log %}
{% set _error_log 	= item.error_log %}
{% set _ssl_error_log 	= 'ssl-' + item.error_log %}
{% endif %}
{# *** [END] set _access_log and _error_log *** #}

{% if item.ssl|default(false) %}
  access_log            {{ _ssl_access_log }};
  error_log             {{ _ssl_error_log }};
{% else %}
  access_log            {{ _access_log }};
  error_log             {{ _error_log }};
{% endif %}
